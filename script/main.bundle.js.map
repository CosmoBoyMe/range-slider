{"version":3,"file":"script/main.bundle.js","mappings":"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","sources":["webpack:///./Presenter/Presenter.ts","webpack:///./helpers.ts","webpack:///./Observer/Observer.ts","webpack:///./const.ts","webpack:///./Model/Model.ts","webpack:///./subView/Track.ts","webpack:///./subView/Progress.ts","webpack:///./subView/Scale.ts","webpack:///./subView/Tooltip.ts","webpack:///./subView/Thumb.ts","webpack:///./View/View.ts","webpack:///./Slider.ts","webpack:///./plugin.ts","webpack:///./Panel/Panel.ts","webpack:///./demo/index.ts"],"sourcesContent":["class Presenter {\r\n    constructor(modelInstance, viewInstance) {\r\n        this.modelInstance = modelInstance;\r\n        this.viewInstance = viewInstance;\r\n        this.bind();\r\n    }\r\n    getModelInstance() {\r\n        return this.modelInstance;\r\n    }\r\n    getViewInstance() {\r\n        return this.viewInstance;\r\n    }\r\n    bind() {\r\n        this.modelInstance.subscribe(\"OPTIONS_CHANGED\" /* OPTIONS_CHANGED */, (data) => {\r\n            this.viewInstance.updateOptions(data);\r\n        });\r\n        this.viewInstance.subscribe(\"UPDATE_VALUE\" /* UPDATE_VALUE */, (payload) => {\r\n            this.modelInstance.updateValue(payload);\r\n        });\r\n        this.modelInstance.subscribe(\"VALUE_UPDATED\" /* VALUE_UPDATED */, (payload) => {\r\n            this.viewInstance.updateValue(payload);\r\n        });\r\n    }\r\n}\r\nexport { Presenter };\r\n","const getClosestValue = (min, max, value, step) => {\r\n    if (value <= min) {\r\n        return min;\r\n    }\r\n    if (value >= max) {\r\n        return max;\r\n    }\r\n    const range = Math.abs(min - value);\r\n    const delta = Math.round(range / step);\r\n    const newValue = min + step * delta;\r\n    return Math.round(newValue * 100) / 100;\r\n};\r\nconst findNearestIndexToValue = (arr, value) => {\r\n    if (arr.length === 0) {\r\n        return -1;\r\n    }\r\n    const nearestValue = arr.reduce((prev, curr) => (Math.abs(curr - value) < Math.abs(prev - value)\r\n        ? curr\r\n        : prev));\r\n    return arr.indexOf(nearestValue);\r\n};\r\nconst getPercentOfValue = (value, min, max) => {\r\n    const percent = ((value - min) / (max - min)) * 100;\r\n    return percent;\r\n};\r\nconst getClosestNumberToStep = (value, step) => {\r\n    const newStep = Math.abs(step);\r\n    const absValue = Math.abs(value);\r\n    const low = absValue - (absValue % newStep);\r\n    const high = low + newStep;\r\n    const result = absValue - low < high - absValue ? low : high;\r\n    return result * Math.sign(value);\r\n};\r\nexport { getClosestValue, findNearestIndexToValue, getPercentOfValue, getClosestNumberToStep, };\r\n","class Observer {\r\n    constructor() {\r\n        this.observers = {};\r\n    }\r\n    getObservers() {\r\n        return this.observers;\r\n    }\r\n    subscribe(type, observer) {\r\n        if (!this.observers[type]) {\r\n            this.observers[type] = [observer];\r\n        }\r\n        else {\r\n            this.observers[type].push(observer);\r\n        }\r\n    }\r\n    notify(type, data) {\r\n        if (this.observers[type]) {\r\n            this.observers[type].forEach((observer) => observer(data));\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\nexport { Observer };\r\n","const DEFAULT_OPTIONS = {\r\n    min: 0,\r\n    max: 10,\r\n    step: 1,\r\n    scaleCounts: 11,\r\n    values: [5, 6],\r\n    vertical: true,\r\n    scale: true,\r\n    tooltip: true,\r\n    progress: true,\r\n};\r\nexport { DEFAULT_OPTIONS, };\r\n","import { getClosestValue } from '../helpers';\r\nimport { Observer } from '../Observer/Observer';\r\nimport { DEFAULT_OPTIONS } from '../const';\r\nclass Model extends Observer {\r\n    constructor(options) {\r\n        super();\r\n        this.options = Object.assign(Object.assign({}, DEFAULT_OPTIONS), options);\r\n        this.init();\r\n    }\r\n    getOptions() {\r\n        const { options } = this;\r\n        return JSON.parse(JSON.stringify(options));\r\n    }\r\n    updateValue({ value, index }) {\r\n        this.options.values[index] = value;\r\n        const newValue = this.options.values[index];\r\n        this.notify(\"VALUE_UPDATED\" /* VALUE_UPDATED */, { value: newValue, index });\r\n    }\r\n    updateOptions(newOptions) {\r\n        this.options = Object.assign(Object.assign({}, this.options), newOptions);\r\n        this.normalizeOptions();\r\n        this.notify(\"OPTIONS_CHANGED\" /* OPTIONS_CHANGED */, this.options);\r\n    }\r\n    init() {\r\n        this.normalizeOptions();\r\n    }\r\n    normalizeOptions() {\r\n        this.normalizeMax();\r\n        this.normalizeScaleCounts();\r\n        this.normalizeStep();\r\n        this.normalizeValues();\r\n    }\r\n    normalizeScaleCounts() {\r\n        const { min, max, step, scaleCounts, } = this.options;\r\n        const range = Math.abs(max - min);\r\n        const maxScaleCounts = range / step + 1;\r\n        const normalizedScaleCounts = Math.round(maxScaleCounts < scaleCounts ? maxScaleCounts : scaleCounts);\r\n        this.options.scaleCounts = normalizedScaleCounts;\r\n    }\r\n    normalizeMax() {\r\n        const { min, max, step } = this.options;\r\n        if (min > max) {\r\n            this.options.max = min + step;\r\n        }\r\n        if (min === max) {\r\n            this.options.max = min + step;\r\n        }\r\n    }\r\n    normalizeValues() {\r\n        const { min, max, step, values, } = this.options;\r\n        const normalizedValues = values.map((value) => getClosestValue(min, max, value, step));\r\n        this.options.values = normalizedValues;\r\n    }\r\n    normalizeStep() {\r\n        const { step, min, max } = this.options;\r\n        const range = Math.abs(max - min);\r\n        if (step === 0) {\r\n            this.options.step = 1;\r\n        }\r\n        else if (step > range) {\r\n            this.options.step = range;\r\n        }\r\n    }\r\n}\r\nexport { Model };\r\n","class Track {\r\n    constructor({ element, isVertical, handleTrackClick }) {\r\n        this.trackElement = document.createElement('div');\r\n        this.element = element;\r\n        this.handleTrackClick = handleTrackClick;\r\n        this.isVertical = isVertical;\r\n        this.render();\r\n    }\r\n    getElement() {\r\n        return this.trackElement;\r\n    }\r\n    toggleVeticalClass() {\r\n        this.trackElement.classList.toggle(\"js-track--vertical\" /* TRACK_VERTICAL */);\r\n    }\r\n    destroy() {\r\n        this.trackElement.remove();\r\n    }\r\n    render() {\r\n        const { trackElement, element } = this;\r\n        trackElement.classList.add(\"js-track\" /* TRACK */);\r\n        trackElement.addEventListener('click', this.handleTrackClick);\r\n        if (this.isVertical) {\r\n            this.toggleVeticalClass();\r\n        }\r\n        element.append(trackElement);\r\n    }\r\n}\r\nexport { Track };\r\n","import { getPercentOfValue } from '../helpers';\r\nclass Progress {\r\n    constructor({ rootElement, values, min, max, range, vertical, }) {\r\n        this.progressEl = document.createElement('div');\r\n        this.rootElement = rootElement;\r\n        this.values = values;\r\n        this.min = min;\r\n        this.max = max;\r\n        this.range = range;\r\n        this.vertical = vertical;\r\n        this.init();\r\n    }\r\n    updateValues(newValues) {\r\n        this.values = newValues;\r\n        this.updateProgressLenght();\r\n        this.updatePosition();\r\n    }\r\n    destroy() {\r\n        this.progressEl.remove();\r\n    }\r\n    getElement() {\r\n        return this.progressEl;\r\n    }\r\n    updateProgressLenght() {\r\n        const { progressEl, values, min, max, range, vertical, } = this;\r\n        let progressLenghtInPercent;\r\n        if (range) {\r\n            const minValue = Math.min(...values);\r\n            const maxValue = Math.max(...values);\r\n            const minValueInPercent = getPercentOfValue(minValue, min, max);\r\n            const maxValueInPercent = getPercentOfValue(maxValue, min, max);\r\n            progressLenghtInPercent = maxValueInPercent - minValueInPercent;\r\n        }\r\n        else {\r\n            progressLenghtInPercent = getPercentOfValue(values[0], min, max);\r\n        }\r\n        vertical ? (progressEl.style.height = `${progressLenghtInPercent}%`)\r\n            : (progressEl.style.width = `${progressLenghtInPercent}%`);\r\n    }\r\n    toggleVerticalClass() {\r\n        const { progressEl, vertical } = this;\r\n        if (vertical) {\r\n            progressEl.classList.add(\"js-progress--vertical\" /* PROGRESS_VERTICAL */);\r\n        }\r\n        else {\r\n            progressEl.classList.remove(\"js-progress--vertical\" /* PROGRESS_VERTICAL */);\r\n        }\r\n    }\r\n    updatePosition() {\r\n        const { min, max, values, progressEl, range, vertical, } = this;\r\n        if (range) {\r\n            const minValue = Math.min(...values);\r\n            const positionInPercent = getPercentOfValue(minValue, min, max);\r\n            vertical\r\n                ? (progressEl.style.bottom = `${positionInPercent}%`)\r\n                : (progressEl.style.left = `${positionInPercent}%`);\r\n        }\r\n        else {\r\n            vertical\r\n                ? (progressEl.style.bottom = '0%')\r\n                : (progressEl.style.left = '0%');\r\n        }\r\n    }\r\n    init() {\r\n        const { progressEl } = this;\r\n        progressEl.classList.add(\"js-progress\" /* PROGRESS */);\r\n        this.updateProgressLenght();\r\n        this.updatePosition();\r\n        this.rootElement.append(progressEl);\r\n        this.toggleVerticalClass();\r\n    }\r\n}\r\nexport { Progress };\r\n","import { getPercentOfValue, getClosestValue } from '../helpers';\r\nclass Scale {\r\n    constructor({ rootDom, min, max, step, scaleCounts, vertical, handleScaleClick, }) {\r\n        this.scaleEl = document.createElement('div');\r\n        this.rootDom = rootDom;\r\n        this.min = min;\r\n        this.max = max;\r\n        this.step = step;\r\n        this.vertical = vertical;\r\n        this.scaleCounts = scaleCounts;\r\n        this.handleScaleClick = handleScaleClick;\r\n        this.render();\r\n    }\r\n    destroy() {\r\n        this.scaleEl.remove();\r\n    }\r\n    getElement() {\r\n        return this.scaleEl;\r\n    }\r\n    createScalePoint(pointValue) {\r\n        const { min, max, vertical } = this;\r\n        const pointEl = document.createElement('div');\r\n        pointEl.classList.add(\"js-scale__point\" /* SCALE_POINT */);\r\n        pointEl.innerHTML = String(pointValue);\r\n        const valuePercent = getPercentOfValue(pointValue, min, max);\r\n        if (vertical) {\r\n            pointEl.classList.add(\"js-scale__point--vertical\" /* SCALE_POINT_VERTICAL */);\r\n            pointEl.style.bottom = `${valuePercent}%`;\r\n        }\r\n        else {\r\n            pointEl.style.left = `${valuePercent}%`;\r\n        }\r\n        return pointEl;\r\n    }\r\n    getScaleValues() {\r\n        const { min, max, scaleCounts, step, } = this;\r\n        const values = [];\r\n        const partsCountWithoutStart = scaleCounts - 1;\r\n        const partStep = (max - min) / partsCountWithoutStart;\r\n        for (let i = 0; i <= partsCountWithoutStart; i += 1) {\r\n            let value;\r\n            if (i === partsCountWithoutStart) {\r\n                value = max;\r\n            }\r\n            else {\r\n                value = getClosestValue(min, max, min + partStep * i, step);\r\n            }\r\n            values.push(value);\r\n        }\r\n        return values;\r\n    }\r\n    deleteScalePointsWhenPointOverlap() {\r\n        const { scaleEl } = this;\r\n        const allPoints = [...scaleEl.children];\r\n        allPoints.forEach((item, index) => {\r\n            const currentItemRect = item.getBoundingClientRect();\r\n            for (let i = index + 1; i < allPoints.length; i += 1) {\r\n                const nextItem = allPoints[i];\r\n                const nextItemRect = nextItem.getBoundingClientRect();\r\n                const isOverplap = !(currentItemRect.top > nextItemRect.bottom\r\n                    || currentItemRect.right < nextItemRect.left\r\n                    || currentItemRect.bottom < nextItemRect.top\r\n                    || currentItemRect.left > nextItemRect.right);\r\n                if (isOverplap) {\r\n                    if (scaleEl.contains(nextItem)) {\r\n                        scaleEl.removeChild(nextItem);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    render() {\r\n        const { rootDom, scaleEl, scaleCounts, vertical, } = this;\r\n        scaleEl.classList.add(\"js-scale\" /* SCALE */);\r\n        if (vertical) {\r\n            scaleEl.classList.add(\"js-scale--vertical\" /* SCALE_VERTICAL */);\r\n        }\r\n        const scaleValues = this.getScaleValues();\r\n        const scalePoints = [];\r\n        for (let i = 0; i < scaleCounts; i += 1) {\r\n            const scalePoint = this.createScalePoint(scaleValues[i]);\r\n            scalePoints.push(scalePoint);\r\n        }\r\n        scaleEl.append(...scalePoints);\r\n        scaleEl.addEventListener('click', this.handleScaleClick);\r\n        rootDom.append(scaleEl);\r\n        this.deleteScalePointsWhenPointOverlap();\r\n    }\r\n}\r\nexport { Scale };\r\n","class Tooltip {\r\n    constructor({ rootElement, value, isVertical }) {\r\n        this.tooltipEl = document.createElement('div');\r\n        this.rootElement = rootElement;\r\n        this.value = value;\r\n        this.isVertical = isVertical;\r\n        this.render();\r\n    }\r\n    destroy() {\r\n        this.tooltipEl.remove();\r\n    }\r\n    getElement() {\r\n        return this.tooltipEl;\r\n    }\r\n    updateValue(newValue) {\r\n        this.value = newValue;\r\n        this.updateInnerText();\r\n    }\r\n    toggleVerticalClass() {\r\n        this.tooltipEl.classList.toggle(\"js-tooltip--vertical\" /* TOOLTIP_VERTICAL */);\r\n    }\r\n    updateInnerText() {\r\n        this.tooltipEl.textContent = String(this.value);\r\n    }\r\n    render() {\r\n        const { tooltipEl } = this;\r\n        tooltipEl.classList.add(\"js-tooltip\" /* TOOLTIP */);\r\n        tooltipEl.textContent = String(this.value);\r\n        if (this.isVertical) {\r\n            this.toggleVerticalClass();\r\n        }\r\n        this.rootElement.append(tooltipEl);\r\n    }\r\n}\r\nexport { Tooltip };\r\n","import { Tooltip } from './Tooltip';\r\nimport { getPercentOfValue } from '../helpers';\r\nclass Thumb {\r\n    constructor({ rootElement, value, min, max, handleThumbPointerDown, index, isVertical, enableTooltip, }) {\r\n        this.thumbEl = document.createElement('div');\r\n        this.tooltipInstance = null;\r\n        this.rootElement = rootElement;\r\n        this.value = value;\r\n        this.min = min;\r\n        this.max = max;\r\n        this.handleThumbPointerDown = handleThumbPointerDown;\r\n        this.index = index;\r\n        this.enableTooltip = enableTooltip;\r\n        this.isVertical = isVertical;\r\n        if (this.enableTooltip) {\r\n            this.tooltipInstance = new Tooltip({ rootElement: this.thumbEl, value, isVertical });\r\n        }\r\n        this.render();\r\n    }\r\n    getElement() {\r\n        return this.thumbEl;\r\n    }\r\n    destroy() {\r\n        this.thumbEl.remove();\r\n    }\r\n    getValue() {\r\n        return this.value;\r\n    }\r\n    updateValue(newValue) {\r\n        this.value = newValue;\r\n        if (this.tooltipInstance) {\r\n            this.tooltipInstance.updateValue(newValue);\r\n        }\r\n        this.updatePosition();\r\n    }\r\n    updatePosition() {\r\n        const { value, min, max, isVertical, thumbEl, } = this;\r\n        isVertical\r\n            ? (thumbEl.style.bottom = `${getPercentOfValue(value, min, max)}%`)\r\n            : (thumbEl.style.left = `${getPercentOfValue(value, min, max)}%`);\r\n    }\r\n    toggleVerticalClass() {\r\n        this.thumbEl.classList.toggle(\"js-thumb--vertical\" /* THUMB_VERTICAL */);\r\n    }\r\n    render() {\r\n        const { rootElement, thumbEl, handleThumbPointerDown, index, isVertical, } = this;\r\n        thumbEl.classList.add(\"js-thumb\" /* THUMB */);\r\n        if (isVertical) {\r\n            this.toggleVerticalClass();\r\n        }\r\n        this.updatePosition();\r\n        thumbEl.addEventListener('pointerdown', (event) => handleThumbPointerDown(event, index));\r\n        rootElement.append(thumbEl);\r\n    }\r\n}\r\nexport { Thumb };\r\n","import { getClosestValue, findNearestIndexToValue } from '../helpers';\r\nimport { Observer } from '../Observer/Observer';\r\nimport { Scale, Track, Thumb, Progress, } from '../subView/index';\r\nclass View extends Observer {\r\n    constructor(domRoot, options) {\r\n        super();\r\n        this.sliderElement = document.createElement('div');\r\n        this.track = null;\r\n        this.thumbsInstance = [];\r\n        this.progessInstance = null;\r\n        this.scaleInstance = null;\r\n        this.sliderElement.classList.add(\"js-custom-slider\" /* SLIDER */);\r\n        domRoot.append(this.sliderElement);\r\n        this.options = options;\r\n        this.render();\r\n    }\r\n    getAllInstance() {\r\n        return {\r\n            track: this.track,\r\n            thumbs: this.thumbsInstance,\r\n            progress: this.progessInstance,\r\n            scale: this.scaleInstance,\r\n        };\r\n    }\r\n    updateValue({ value, index }) {\r\n        this.options.values[index] = value;\r\n        this.thumbsInstance[index].updateValue(value);\r\n        if (this.progessInstance) {\r\n            this.progessInstance.updateValues(this.options.values);\r\n        }\r\n    }\r\n    updateOptions(newOptions) {\r\n        this.options = newOptions;\r\n        this.destroyAllInstances();\r\n        this.render();\r\n    }\r\n    getOptions() {\r\n        return this.options;\r\n    }\r\n    getSliderElement() {\r\n        return this.sliderElement;\r\n    }\r\n    getCurrentValueFromCoords(clientX, clientY) {\r\n        const { min, max, step, vertical, } = this.options;\r\n        const coords = vertical ? clientY : clientX;\r\n        const startEdgeCoords = vertical\r\n            ? this.sliderElement.getBoundingClientRect().bottom\r\n            : this.sliderElement.getBoundingClientRect().left;\r\n        const maxOffsetInPx = vertical\r\n            ? this.sliderElement.offsetHeight\r\n            : this.sliderElement.offsetWidth;\r\n        let offsetInPx = vertical\r\n            ? startEdgeCoords - coords\r\n            : coords - startEdgeCoords;\r\n        if (offsetInPx < 0) {\r\n            offsetInPx = 0;\r\n        }\r\n        if (offsetInPx > maxOffsetInPx) {\r\n            offsetInPx = maxOffsetInPx;\r\n        }\r\n        const valueInPercent = offsetInPx / (maxOffsetInPx / 100);\r\n        const currentValue = (valueInPercent * (max - min)) / 100 + min;\r\n        const nearestValue = getClosestValue(min, max, currentValue, step);\r\n        return nearestValue;\r\n    }\r\n    destroyAllInstances() {\r\n        var _a, _b, _c, _d;\r\n        (_a = this.track) === null || _a === void 0 ? void 0 : _a.destroy();\r\n        (_b = this.progessInstance) === null || _b === void 0 ? void 0 : _b.destroy();\r\n        this.thumbsInstance.forEach((thumbInstance) => thumbInstance.destroy());\r\n        (_c = this.scaleInstance) === null || _c === void 0 ? void 0 : _c.destroy();\r\n        (_d = this.progessInstance) === null || _d === void 0 ? void 0 : _d.destroy();\r\n    }\r\n    handleThumbPointerDown(event, index) {\r\n        event.preventDefault();\r\n        const handlerDocumentPointerMove = ({ clientX, clientY }) => {\r\n            const currentValue = this.getCurrentValueFromCoords(clientX, clientY);\r\n            if (currentValue !== this.options.values[index]) {\r\n                this.notify(\"UPDATE_VALUE\" /* UPDATE_VALUE */, { value: currentValue, index });\r\n            }\r\n        };\r\n        const handlerDocumentPointerUp = () => {\r\n            document.removeEventListener('pointerup', handlerDocumentPointerUp);\r\n            document.removeEventListener('pointermove', handlerDocumentPointerMove);\r\n        };\r\n        document.addEventListener('pointermove', handlerDocumentPointerMove);\r\n        document.addEventListener('pointerup', handlerDocumentPointerUp);\r\n        const { target } = event;\r\n        if (target) {\r\n            target.ondragstart = () => false;\r\n        }\r\n    }\r\n    handleTrackClick(event) {\r\n        const { clientX, clientY } = event;\r\n        const currentValue = this.getCurrentValueFromCoords(clientX, clientY);\r\n        this.updateClickedValue(currentValue);\r\n    }\r\n    handleScaleClick(event) {\r\n        const { target } = event;\r\n        if (target) {\r\n            const value = Number(target.innerText);\r\n            this.updateClickedValue(value);\r\n        }\r\n    }\r\n    updateClickedValue(value) {\r\n        const { values } = this.options;\r\n        let handleIndex = 0;\r\n        if (values.length > 1) {\r\n            handleIndex = findNearestIndexToValue(values, value);\r\n        }\r\n        this.notify(\"UPDATE_VALUE\" /* UPDATE_VALUE */, { value, index: handleIndex });\r\n    }\r\n    render() {\r\n        const { min, max, step, values, scaleCounts, vertical, tooltip, scale, progress, } = this.options;\r\n        const isRange = values.length > 1;\r\n        this.track = new Track({\r\n            element: this.sliderElement,\r\n            isVertical: vertical,\r\n            handleTrackClick: this.handleTrackClick.bind(this),\r\n        });\r\n        const trackElement = this.track.getElement();\r\n        if (progress) {\r\n            this.progessInstance = new Progress({\r\n                rootElement: trackElement,\r\n                values,\r\n                min,\r\n                max,\r\n                range: isRange,\r\n                vertical,\r\n            });\r\n        }\r\n        if (scale) {\r\n            this.scaleInstance = new Scale({\r\n                rootDom: this.sliderElement,\r\n                min,\r\n                max,\r\n                step,\r\n                scaleCounts,\r\n                vertical,\r\n                handleScaleClick: this.handleScaleClick.bind(this),\r\n            });\r\n        }\r\n        this.thumbsInstance = values.map((value, index) => new Thumb({\r\n            rootElement: trackElement,\r\n            value,\r\n            min,\r\n            max,\r\n            handleThumbPointerDown: this.handleThumbPointerDown.bind(this),\r\n            index,\r\n            isVertical: vertical,\r\n            enableTooltip: tooltip,\r\n        }));\r\n    }\r\n}\r\nexport { View };\r\n","import './style.scss';\r\nimport { Presenter } from './Presenter/Presenter';\r\nimport { Model } from './Model/Model';\r\nimport { View } from './View/View';\r\nclass Slider {\r\n    constructor(domRoot, options = {}) {\r\n        this.modelInstance = new Model(options);\r\n        const modelOptions = this.modelInstance.getOptions();\r\n        this.viewInstance = new View(domRoot, modelOptions);\r\n        this.preseneterInstance = new Presenter(this.modelInstance, this.viewInstance);\r\n    }\r\n    updateOptions(newOptions) {\r\n        this.modelInstance.updateOptions(newOptions);\r\n    }\r\n    onChangeOptions(fn) {\r\n        const notifyFn = () => {\r\n            fn(this.getOptions());\r\n        };\r\n        this.modelInstance.subscribe(\"OPTIONS_CHANGED\" /* OPTIONS_CHANGED */, notifyFn);\r\n        this.modelInstance.subscribe(\"VALUE_UPDATED\" /* VALUE_UPDATED */, notifyFn);\r\n    }\r\n    getOptions() {\r\n        return this.modelInstance.getOptions();\r\n    }\r\n}\r\nexport { Slider };\r\n","import { Slider } from './Slider';\r\n(function plugin($) {\r\n    // eslint-disable-next-line no-param-reassign\r\n    $.fn.rangeSlider = function slider(option = {}) {\r\n        const element = $(this).get(0);\r\n        if (element) {\r\n            return new Slider(element, option);\r\n        }\r\n        return undefined;\r\n    };\r\n}(jQuery));\r\n","import './style.scss';\r\nclass Panel {\r\n    constructor(rootElement, slider) {\r\n        this.panelEl = document.createElement('div');\r\n        this.rootElement = rootElement;\r\n        this.panelEl.classList.add(\"js-panel\" /* PANEL */);\r\n        this.rootElement.append(this.panelEl);\r\n        this.slider = slider;\r\n        this.options = slider.getOptions();\r\n        this.slider.onChangeOptions(this.onChangeOptions.bind(this));\r\n        this.render();\r\n    }\r\n    handlerDeleteThumbBtnClick(event, index) {\r\n        const { values } = this.options;\r\n        const newValues = values.filter((_, itemIndex) => index !== itemIndex);\r\n        this.options.values = newValues;\r\n        this.slider.updateOptions(this.options);\r\n    }\r\n    handlerItemInputBlur(event, name, index) {\r\n        const inputEl = event.target;\r\n        const { value } = inputEl;\r\n        const isValuesInput = name === 'values' && index !== undefined;\r\n        if (isValuesInput) {\r\n            this.options.values[index] = Number(value);\r\n            this.slider.updateOptions({ [name]: this.options.values });\r\n        }\r\n        else {\r\n            this.slider.updateOptions({ [name]: Number(value) });\r\n        }\r\n    }\r\n    handlerItemCheckboxClick(event, optionName) {\r\n        const { options } = this;\r\n        if (typeof options[optionName] === 'boolean') {\r\n            Object.defineProperty(options, optionName, {\r\n                value: !options[optionName],\r\n            });\r\n            this.slider.updateOptions(options);\r\n        }\r\n    }\r\n    handleAddNewThumbBtnClick(_, value) {\r\n        const { values } = this.options;\r\n        values.push(value);\r\n        this.slider.updateOptions({ values });\r\n    }\r\n    createValuesInput({ name, text, value, index, }) {\r\n        const labelEl = document.createElement('label');\r\n        labelEl.classList.add(\"js-panel__item\" /* PANEL_ITEM */);\r\n        const inputEl = document.createElement('input');\r\n        inputEl.classList.add(\"js-panel__item-input\" /* PANEL_ITEM_INPUT */);\r\n        inputEl.setAttribute('type', 'number');\r\n        inputEl.setAttribute('data-values', String(value));\r\n        inputEl.value = String(value);\r\n        inputEl.addEventListener('blur', (event) => this.handlerItemInputBlur(event, name, index));\r\n        const button = document.createElement('button');\r\n        button.classList.add(\"js-panel__delete-thumb-btn\" /* PANEL_DELETE_THUMB_BTN */);\r\n        button.textContent = 'delete thumb';\r\n        button.addEventListener('click', (event) => this.handlerDeleteThumbBtnClick(event, index));\r\n        labelEl.append(text, inputEl, button);\r\n        return labelEl;\r\n    }\r\n    createSwitchElement(optionName, text, checked) {\r\n        const labelEl = document.createElement('label');\r\n        labelEl.classList.add(\"js-panel__item\" /* PANEL_ITEM */);\r\n        const checkboxEl = document.createElement('input');\r\n        checkboxEl.classList.add(\"js-panel__item-checkbox\" /* PANEL_ITEM_CHECKBOX */);\r\n        checkboxEl.setAttribute('type', 'checkbox');\r\n        checkboxEl.checked = checked;\r\n        checkboxEl.setAttribute(`data-${optionName}`, String(checked));\r\n        checkboxEl.addEventListener('click', (event) => this.handlerItemCheckboxClick(event, optionName));\r\n        labelEl.append(text, checkboxEl);\r\n        return labelEl;\r\n    }\r\n    createNumberInputEl(name, text, value) {\r\n        const labelEl = document.createElement('label');\r\n        labelEl.classList.add(\"js-panel__item\" /* PANEL_ITEM */);\r\n        const inputEl = document.createElement('input');\r\n        inputEl.classList.add(\"js-panel__item-input\" /* PANEL_ITEM_INPUT */);\r\n        inputEl.setAttribute('type', 'number');\r\n        inputEl.setAttribute(`data-${name}`, String(value));\r\n        inputEl.value = String(value);\r\n        inputEl.addEventListener('blur', (event) => this.handlerItemInputBlur(event, name));\r\n        labelEl.append(text, inputEl);\r\n        return labelEl;\r\n    }\r\n    createNewThumbBlock() {\r\n        const newThumbBlock = document.createElement('div');\r\n        const h3 = document.createElement('h3');\r\n        h3.innerText = 'add new Value';\r\n        const inputEl = document.createElement('input');\r\n        inputEl.classList.add(\"js-panel__new-item_input\" /* PANEL_NEW_ITEM_INPUT */);\r\n        inputEl.setAttribute('type', 'number');\r\n        const button = document.createElement('button');\r\n        button.classList.add(\"js-panel__add-new_thumb-btn\" /* PANEL_ADD_NEW_THUMB_BTN */);\r\n        button.innerText = '+';\r\n        button.addEventListener('click', (event) => {\r\n            const value = Number(inputEl.value);\r\n            this.handleAddNewThumbBtnClick(event, value);\r\n        });\r\n        inputEl.setAttribute('type', 'number');\r\n        newThumbBlock.append(h3, inputEl, button);\r\n        return newThumbBlock;\r\n    }\r\n    onChangeOptions(newOptions) {\r\n        this.options = newOptions;\r\n        this.render();\r\n    }\r\n    render() {\r\n        const entriesOptions = Object.entries(this.options);\r\n        const controlsElemenets = [];\r\n        const switchContainer = document.createElement('div');\r\n        switchContainer.classList.add(\"js-panel__switch-container\" /* PANEL_SWITCH_CONTAINER */);\r\n        entriesOptions.forEach(([key, value]) => {\r\n            if (typeof value === 'boolean') {\r\n                const switchElement = this.createSwitchElement(key, key, value);\r\n                switchContainer.append(switchElement);\r\n            }\r\n            else if (key === 'values') {\r\n                const valueElements = value.map((val, index) => this.createValuesInput({\r\n                    name: key, text: 'value', value: val, index,\r\n                }));\r\n                const newThumbsBlock = this.createNewThumbBlock();\r\n                controlsElemenets.push(...valueElements, newThumbsBlock);\r\n            }\r\n            else {\r\n                controlsElemenets.push(this.createNumberInputEl(key, key, value));\r\n            }\r\n        });\r\n        this.panelEl.innerHTML = '';\r\n        this.panelEl.append(...controlsElemenets, switchContainer);\r\n    }\r\n}\r\nexport { Panel };\r\n","import './style.scss';\r\nimport '../index';\r\nimport { Panel } from '../Panel/Panel';\r\nconst demoElements = document.querySelectorAll('.demo');\r\nconst customOptionsFirst = {\r\n    tooltip: false,\r\n    progress: false,\r\n    scale: false,\r\n    vertical: false,\r\n};\r\nconst customOptionsSecond = {\r\n    min: -100,\r\n    max: 30,\r\n    step: 10,\r\n    values: [10],\r\n};\r\nconst customOptionsThird = {\r\n    min: -100,\r\n    max: -10,\r\n    step: 0.33,\r\n    vertical: false,\r\n    scaleCounts: 2,\r\n    progress: false,\r\n    values: [-33.01, -55.12],\r\n};\r\nconst customOptionsFourth = {\r\n    min: -1000,\r\n    max: 10000,\r\n    step: 0.33,\r\n    scaleCounts: 5,\r\n    tooltip: false,\r\n    vertical: false,\r\n    scale: true,\r\n    values: [33, 5000, 3000, 6534, 4043],\r\n};\r\nconst customOptionsFive = {};\r\nconst optionsArray = [\r\n    customOptionsFirst,\r\n    customOptionsSecond,\r\n    customOptionsThird,\r\n    customOptionsFourth,\r\n    customOptionsFive,\r\n];\r\ndemoElements.forEach((item, index) => {\r\n    const sliderEl = item.querySelector('.slider');\r\n    const slider = $(sliderEl).rangeSlider(optionsArray[index]);\r\n    // eslint-disable-next-line no-new\r\n    new Panel(item, slider);\r\n});\r\n"],"names":["Presenter","constructor","modelInstance","viewInstance","this","bind","getModelInstance","getViewInstance","subscribe","data","updateOptions","payload","updateValue","getClosestValue","min","max","value","step","range","Math","abs","newValue","round","getPercentOfValue","Observer","observers","getObservers","type","observer","push","notify","forEach","DEFAULT_OPTIONS","scaleCounts","values","vertical","scale","tooltip","progress","Model","options","super","Object","assign","init","getOptions","JSON","parse","stringify","index","newOptions","normalizeOptions","normalizeMax","normalizeScaleCounts","normalizeStep","normalizeValues","maxScaleCounts","normalizedScaleCounts","normalizedValues","map","Track","element","isVertical","handleTrackClick","trackElement","document","createElement","render","getElement","toggleVeticalClass","classList","toggle","destroy","remove","add","addEventListener","append","Progress","rootElement","progressEl","updateValues","newValues","updateProgressLenght","updatePosition","progressLenghtInPercent","minValue","maxValue","minValueInPercent","style","height","width","toggleVerticalClass","positionInPercent","bottom","left","Scale","rootDom","handleScaleClick","scaleEl","createScalePoint","pointValue","pointEl","innerHTML","String","valuePercent","getScaleValues","partsCountWithoutStart","partStep","i","deleteScalePointsWhenPointOverlap","allPoints","children","item","currentItemRect","getBoundingClientRect","length","nextItem","nextItemRect","top","right","contains","removeChild","scaleValues","scalePoints","scalePoint","Tooltip","tooltipEl","updateInnerText","textContent","Thumb","handleThumbPointerDown","enableTooltip","thumbEl","tooltipInstance","getValue","event","View","domRoot","sliderElement","track","thumbsInstance","progessInstance","scaleInstance","getAllInstance","thumbs","destroyAllInstances","getSliderElement","getCurrentValueFromCoords","clientX","clientY","coords","startEdgeCoords","maxOffsetInPx","offsetHeight","offsetWidth","offsetInPx","_a","_b","_c","_d","thumbInstance","preventDefault","handlerDocumentPointerMove","currentValue","handlerDocumentPointerUp","removeEventListener","target","ondragstart","updateClickedValue","Number","innerText","handleIndex","arr","nearestValue","reduce","prev","curr","indexOf","findNearestIndexToValue","isRange","Slider","modelOptions","preseneterInstance","onChangeOptions","fn","notifyFn","$","rangeSlider","option","get","jQuery","Panel","slider","panelEl","handlerDeleteThumbBtnClick","filter","_","itemIndex","handlerItemInputBlur","name","inputEl","undefined","handlerItemCheckboxClick","optionName","defineProperty","handleAddNewThumbBtnClick","createValuesInput","text","labelEl","setAttribute","button","createSwitchElement","checked","checkboxEl","createNumberInputEl","createNewThumbBlock","newThumbBlock","h3","entriesOptions","entries","controlsElemenets","switchContainer","key","switchElement","valueElements","val","newThumbsBlock","demoElements","querySelectorAll","optionsArray","sliderEl","querySelector"],"sourceRoot":""}